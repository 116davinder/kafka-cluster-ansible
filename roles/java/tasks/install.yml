---

- name: 'Check Java Version Support'
  ansible.builtin.fail:
    msg: 'java version is not supported, please use, <= 8 or >= 11'
  when:
    - javaVersion | int in [9,10]

- name: Setting java update true if required
  ansible.builtin.set_fact:
    javaUpdateState: latest
  when: updateJava

- name: Install Openjdk | <= 8 | RedHat | if java version is less than 8
  ansible.builtin.yum:
    name: "{{ item }}"
    state: "{{ javaUpdateState | default('present') }}"
    update_cache: true
  loop:
    - "java-1.{{ javaVersion }}.0-openjdk"
    - "java-1.{{ javaVersion }}.0-openjdk-devel"
  when:
    - ansible_distribution in ['CentOS', 'RedHat'] | list
    - javaVersion | int <= 8

# INFO: Java 9 & 10 packages are not avilable
- name: Install Openjdk | >= 11 | RedHat | if java version is greater than 11
  ansible.builtin.yum:
    name: "{{ item }}"
    state: "{{ javaUpdateState | default('present') }}"
    update_cache: true
  loop:
    - "java-{{ javaVersion }}-openjdk"
    - "java-{{ javaVersion }}-openjdk-devel"
  when:
    - ansible_distribution in ['CentOS', 'RedHat'] | list
    - javaVersion | int >= 11

- name: Install OpenJdk | {{ javaVersion }} | Debian/Ubuntu
  ansible.builtin.apt:
    name: "{{ item }}"
    state: "{{ javaUpdateState | default('present') }}"
    update_cache: true
  loop:
    - "openjdk-{{ javaVersion }}-jdk-headless"
    - "openjdk-{{ javaVersion }}-jdk"
  when: ansible_distribution in ['Debian', 'Ubuntu'] | list

- name: Install Openjdk | <= 8 | Amazon | if java version is less than 8
  ansible.builtin.command: "amazon-linux-extras install java-1.{{ javaVersion }}.0-openjdk -y"
  when:
    - ansible_distribution in ['Amazon'] | list
    - javaVersion | int <= 8

# INFO: Java 9 & 10 packages are not avilable
- name: Install Openjdk | >= 11 | Amazon | if java version is greater than 11
  ansible.builtin.command: "amazon-linux-extras install java-openjdk{{ javaVersion }} -y"
  when:
    - ansible_distribution in ['Amazon'] | list
    - javaVersion | int >= 11