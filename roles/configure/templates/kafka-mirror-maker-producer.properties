############################# Producer Basics #############################

bootstrap.servers={{ kafkaMirrorMakerDestinationDcClusterAddressString }}

# specify the compression codec for all data generated: none, gzip, snappy, lz4, zstd
compression.type={{ kafkaMirrorMakerCompressionType }}

# name of the partitioner class for partitioning events; default partition spreads data randomly
partitioner.class={{ kafkaMirrorMakerPartitionerClass }}

# the maximum amount of time the client will wait for the response of a request
request.timeout.ms={{ kafkaMirrorMakerRequestTimeoutMs }}

# how long `KafkaProducer.send` and `KafkaProducer.partitionsFor` will block for
max.block.ms={{ kafkaMirrorMakerMaxBlockMs }}

# the producer will wait for up to the given delay to allow other records to be sent so that the sends can be batched together
linger.ms={{ kafkaMirrorMakerLingerMs }}

# the maximum size of a request in bytes
max.request.size={{ kafkaMirrorMakerMaxRequestSize }}

# the default batch size in bytes when batching multiple records sent to a partition
batch.size={{ kafkaMirrorMakerBatchSize }}

# the total bytes of memory the producer can use to buffer records waiting to be sent to the server
buffer.memory={{ kafkaMirrorMakerBufferMemory }} 

max.in.flight.requests.per.connection={{ kafkaMirrorMakerMaxInFlightRequestsPerConnection }}

client.id={{ kafkaMirrorMakerClientId }}

acks={{ kafkaMirrorMakerAcks }}